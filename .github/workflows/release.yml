name: release-deb

on:
  workflow_dispatch:
  schedule:
    - cron: '57 8 * * *'

jobs:
  check_version:
    runs-on: ubuntu-latest
    outputs:
      debexists: ${{ steps.version.outputs.debexists }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: check version
        id: version
        run: |
          sudo apt-get install -y jq
          PODMAN_VERSION="$(curl --silent -f -o - https://api.github.com/repos/containers/podman/releases/latest | tee | jq -r '.tag_name')"
          curl --silent -f -o Packages.gz https://NotBobTheBuilder.github.io/podman/Packages.gz
          echo "Looking for version $PODMAN_VERSION in file"
          gzip -c -d Packages.gz
          if gzip -c -d Packages.gz | grep "X-Release-Branch: $PODMAN_VERSION"; then
            DEB_EXISTS='true'
          else
            DEB_EXISTS='false'
          fi
          echo "debexists=$DEB_EXISTS" >> "$GITHUB_OUTPUT"
          echo "version=$PODMAN_VERSION" >> "$GITHUB_OUTPUT"
          echo "debexists=$DEB_EXISTS" >> "$GITHUB_STEP_SUMMARY"
          echo "version=$PODMAN_VERSION" >> "$GITHUB_STEP_SUMMARY"

  make-deb:
    needs: check_version
    runs-on: ubuntu-latest
    if: needs.check_version.outputs.debexists == 'false'
    env:
      ARCH: ${{ matrix.arch }}
      PODMAN_VERSION: ${{ needs.check_version.outputs.version }}
    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu_latest
          - arch: x86_64
            distro: ubuntu_latest
    steps:
      - name: checkout podman
        uses: actions/checkout@v3
        with:
          repository: containers/podman
          ref: ${{ env.PODMAN_VERSION }}
          path: podman
      - name: build
        uses: NotBobTheBuilder/run-on-arch-action@amd64-support
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          githubToken: ${{ github.token }}
          dockerRunArgs: |
            --volume "${PWD}/podman:/podman"
            --volume "${PWD}/build.bash:/build.bash"
          run: |
            /build.bash

      - name: make deb
        run: |
            ./package.bash

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: deb-${{ matrix.arch }}
          path: |
            out/*.deb
          retention-days: 1

  update-archive:
    runs-on: ubuntu-latest
    needs: [ make-deb, check_version ]
    if: needs.check_version.outputs.debexists == 'false'
    env:
      EMAIL: jack+ppa@jackwearden.co.uk
      GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      PODMAN_VERSION: ${{ needs.check_version.outputs.version }}
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: checkout archive
        uses: actions/checkout@v3
        with:
          repository: NotBobTheBuilder/podman
          ref: gh-pages
          path: archive
      - name: update archive
        run: |
          ./update-archive.bash

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          path: archive
          labels: |
            auto-nightly-build
          title: Release Version ${{ needs.check_version.outputs.version }}
          commit-message: Release Version ${{ needs.check_version.outputs.version }}
          reviewers: NotBobTheBuilder
          branch: auto-nightly-build
