name: release-deb

on:
  workflow_dispatch:
  push:
    branches: [ gh-pages ]
  schedule:
    - cron: '57 8 * * *'

jobs:
  check_version:
    runs-on: ubuntu-latest
    outputs:
      debexists: ${{ steps.version.outputs.debexists }}
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: check version
        id: version
        run: |
          sudo apt-get install -y jq
          PODMAN_VERSION="$(curl -f -o - https://api.github.com/repos/containers/podman/releases/latest | tee | jq -r '.tag_name')"
          curl -f -o Packages.gz https://NotBobTheBuilder.github.io/podman/Packages.gz
          echo "Looking for version $PODMAN_VERSION in file"
          gzip -c -d Packages.gz
          if [[ $(gzip -c -d Packages.gz | grep "podman_$PODMAN_VERSION")$? ]]; then
            DEB_EXISTS='true'
          else
            DEB_EXISTS='false'
          fi
          echo "debexists=$DEB_EXISTS" >> "$GITHUB_OUTPUT"
          echo "version=$PODMAN_VERSION" >> "$GITHUB_OUTPUT"
          echo "debexists=$DEB_EXISTS" >> "$GITHUB_STEP_SUMMARY"
          echo "version=$PODMAN_VERSION" >> "$GITHUB_STEP_SUMMARY"
  make-deb:
    needs: check_version
    runs-on: ubuntu-latest
    if: needs.check_version.outputs.debexists == 'false'
    env:
      ARCH: ${{ matrix.arch }}
      PODMAN_VERSION: ${{ needs.check_version.outputs.version }}
    strategy:
      matrix:
        include:
          - arch: aarch64
            distro: ubuntu_latest
          - arch: x86_64
            distro: ubuntu_latest
    steps:
      - name: checkout podman
        uses: actions/checkout@v3
        with:
          repository: containers/podman
          ref: ${{ env.PODMAN_VERSION }}
          path: podman
      - name: build
        uses: NotBobTheBuilder/run-on-arch-action@amd64-support
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          githubToken: ${{ github.token }}
          dockerRunArgs: |
            --volume "${PWD}/podman:/podman"
          run: |
            apt-get -qq update
            apt-get -qq install -y libsystemd-dev libseccomp-dev golang-github-proglottis-gpgme-dev make golang-go git python3 bash
            git config --global --add safe.directory '*'
            cd /podman
            make binaries docs completions install install.completions PREFIX=./deb/usr ETCDIR=./deb/etc SHELL=/bin/bash
            gzip -r deb/usr/share/man
      - name: make deb
        run: |
          mkdir out
          docker run --rm --user 0 -v $(pwd)/podman/deb:/src -v $(pwd)/out:/out \
            ghcr.io/notbobthebuilder/fpm \
            --input-type dir \
            --output-type deb \
            --package /out/ \
            --version $PODMAN_VERSION \
            --architecture $ARCH \
            --name podman \
            --description 'engine to run OCI-based containers in Pods. Podman is an engine for running OCI-based containers in Pods. Podman provides a CLI interface for managing Pods, Containers, and Container Images.' \
            --maintainer jack@jackwearden.co.uk \
            --license 'Apache 2.0' \
            --url https://github.com/containers/podman \
            --depends 'conmon (>= 2.0.18~)' \
            --depends 'golang-github-containers-common' \
            --depends 'crun | runc (>= 1.0.0~rc92~)' \
            --deb-recommends 'buildah (>= 1.28)' \
            --deb-recommends 'dbus-user-session' \
            --deb-recommends 'fuse-overlayfs (>= 1.0.0~)' \
            --deb-recommends 'slirp4netns (>= 0.4.1~)' \
            --deb-recommends 'catatonit | tini | dumb-init' \
            --deb-recommends 'uid-map' \
            --deb-suggests 'containers-storage' \
            --deb-suggests 'docker-compose' \
            --deb-suggests 'iptables' \
            .
          ls out/*
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with:
          name: deb-${{ matrix.arch }}
          path: |
            out/*.deb
          retention-days: 1
  update-archive:
    runs-on: ubuntu-latest
    needs: [ make-deb, check_version ]
    if: needs.check_version.outputs.debexists == 'false'
    env:
      EMAIL: jack+ppa@jackwearden.co.uk
      GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      PODMAN_VERSION: ${{ needs.check_version.outputs.version }}
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: checkout archive
        uses: actions/checkout@v3
        with:
          repository: NotBobTheBuilder/podman
          ref: gh-pages
          path: archive
      - name: update archive
        run: |
          sudo apt-get -qq install -y gnupg dpkg-dev apt-utils
          ls artifacts/*
          find artifacts
          cp artifacts/**/*.deb archive
          cd archive
          dpkg-scanpackages --multiversion . | gzip > Packages.gz
          apt-ftparchive release . > Release
          echo "$GPG_PRIVATE_KEY" | gpg --armor --import
          gpg --default-key "$EMAIL" -abs -o - Release > Release.gpg
          gpg --default-key "$EMAIL" --clearsign -o - Release > InRelease
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          path: archive
          labels: |
            auto-nightly-build
          title: Release Version ${{ needs.check_version.outputs.version }}
          commit-message: Release Version ${{ needs.check_version.outputs.version }}
          reviewers: NotBobTheBuilder
          branch: auto-nightly-build
